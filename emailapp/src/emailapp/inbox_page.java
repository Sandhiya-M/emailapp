/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package emailapp;

import java.awt.Color;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.*;
import javax.mail.internet.MimeMessage;
//import javax
import javax.mail.internet.*;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.activation.*;
import java.util.Enumeration;

/*
/**
 *
 * @author SANDHIYA
 */

public class inbox_page extends javax.swing.JFrame {

    public static int k = 0;
   
    public static String flag;

    public List<String> downloadAttachments(Message message) throws IOException, MessagingException {
        String downloadDirectory = "C:\\Users\\SANDHIYA\\Downloads";
        List<String> downloadedAttachments = new ArrayList<String>();
        Multipart multiPart = (Multipart) message.getContent();
        int numberOfParts = multiPart.getCount();
        for (int partCount = 0; partCount < numberOfParts; partCount++) {
            MimeBodyPart part = (MimeBodyPart) multiPart.getBodyPart(partCount);
            if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition())) {
                String file = part.getFileName();
                part.saveFile(downloadDirectory + File.separator + part.getFileName());
                downloadedAttachments.add(file);
            }
        }
        return downloadedAttachments;
    }

    public void readmail() throws Exception {
        String user = login.emailid;
        String pwd =login.pswd;
        String host = "pop.gmail.com";
        Properties p = new Properties();
        p.setProperty("mail.pop3.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        p.setProperty("mail.pop3.socketFactory.port", "995");
        p.setProperty("mail.pop3.socketFactory.fallback", "false");
        p.setProperty("mail.pop3.user", user);
        p.setProperty("mail.pop3.host", "pop.gmail.com");
        p.setProperty("mail.pop3.port", "995");
        p.setProperty("mail.store.protocol", "pop3");
        Session ss = Session.getDefaultInstance(p, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(user, pwd);
            }
        });
        try {
            Store st = ss.getStore("pop3");
            st.connect(host, user, pwd);
            Folder ft = st.getFolder("INBOX");
            ft.open(Folder.READ_ONLY);
            Message m[] = ft.getMessages();
            String out = "";
            while (k < m.length) {

                Message mt = m[k];
                String dt = mt.getSentDate().toString();
                String splt[] = dt.split(" ");

                if (splt[1].equals(flag)) {
                    subject.setText(mt.getSubject());
                    System.out.println(splt[1]);
                    date.setText(mt.getSentDate().toString());
                    String putfrom = "";
                    Address ap[] = mt.getFrom();
                    for (int i = 0; i < ap.length; i++) {
                        putfrom += ap[i].toString() + ",";
                    }
                    body.setContentType("text/html");
                    body.setText(mt.getContent().toString());
                    
                    from.setText(putfrom);
                } else {
                    k += 1;
                    continue;
                }
                break;
            }

            //  uid.setText(new Date(2023,0,6).toString());
        } catch (Exception e) {
            System.out.println(e);
        }

    }

    public inbox_page() {
        initComponents();
       if(login.emailid!=null){
            if(!login.emailid.equals("")){
        lmsg.setText("Logged in as ,"+ login.emailid);}
            else{
                lmsg.setText("Logged out!! Please Login to see the inbox!!");
        lmsg.setForeground(Color.red);
            }
            
       }
        else{
        lmsg.setText("Please Login to see the inbox!!");
        lmsg.setForeground(Color.red);
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uid = new javax.swing.JLabel();
        subject = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        from = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        body = new javax.swing.JTextPane();
        yr = new javax.swing.JComboBox<>();
        get = new javax.swing.JButton();
        back = new javax.swing.JButton();
        lmsg = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inbox");
        setSize(new java.awt.Dimension(2000, 2000));

        uid.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        uid.setForeground(new java.awt.Color(0, 51, 102));
        uid.setText("Choose Month");

        subject.setEditable(false);
        subject.setColumns(75);
        subject.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        subject.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        subject.setToolTipText("");
        subject.setName(""); // NOI18N
        subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectActionPerformed(evt);
            }
        });

        date.setEditable(false);
        date.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N

        from.setEditable(false);
        from.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 0, 102));
        jButton1.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Next mail");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        logout.setBackground(new java.awt.Color(0, 0, 0));
        logout.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        body.setEditable(false);
        body.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(body);

        yr.setFont(new java.awt.Font("MS UI Gothic", 3, 18)); // NOI18N
        yr.setForeground(new java.awt.Color(153, 0, 102));
        yr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jul", "Aug", "Sep", "Oct" }));
        yr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yrActionPerformed(evt);
            }
        });

        get.setBackground(new java.awt.Color(204, 51, 0));
        get.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        get.setForeground(new java.awt.Color(255, 255, 255));
        get.setText("Get");
        get.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getMouseClicked(evt);
            }
        });
        get.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 102, 0));
        back.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        lmsg.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N

        send.setBackground(new java.awt.Color(0, 0, 0));
        send.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        send.setForeground(new java.awt.Color(204, 204, 204));
        send.setText("Compose");
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 204, 255));
        jLabel5.setFont(new java.awt.Font("Imprint MT Shadow", 1, 72)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SMAIL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 949, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 261, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(from)
                            .addComponent(date, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                        .addGap(113, 113, 113)
                        .addComponent(uid, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(get, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(440, 440, 440)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(224, 224, 224)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(lmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(uid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(get))))
                        .addGap(18, 18, 18)
                        .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        k += 1;
        try {
            readmail();
        } catch (Exception ex) {
            Logger.getLogger(inbox_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
       login.emailid="";
        login.pswd="";
        this.dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_logoutMouseClicked

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromActionPerformed

    private void yrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yrActionPerformed

    private void getMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getMouseClicked
       
        flag=yr.getSelectedItem().toString();
   
        try {
            readmail();

            //add((new javax.swing.JLabel()).setText(emailid));
        } catch (Exception ex) {
            Logger.getLogger(inbox_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(true);
    }//GEN-LAST:event_getMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        this.dispose();
        new page().setVisible(true);
     
    }//GEN-LAST:event_backMouseClicked

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked
        // TODO add your handling code here:]
        this.dispose();
        new sendmail().setVisible(true);
    }//GEN-LAST:event_sendMouseClicked

    private void getActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inbox_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextPane body;
    private javax.swing.JTextField date;
    private javax.swing.JTextField from;
    private javax.swing.JButton get;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lmsg;
    private javax.swing.JButton logout;
    private javax.swing.JButton send;
    private javax.swing.JTextField subject;
    private javax.swing.JLabel uid;
    private javax.swing.JComboBox<String> yr;
    // End of variables declaration//GEN-END:variables
}
